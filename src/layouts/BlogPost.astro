---
import "@shikijs/twoslash/style-rich.css";
import { Blog, db, eq } from "astro:db";
import BaseHead from "../components/BaseHead.astro";
import Footer from "../components/Footer.astro";
import Header from "../components/Header.astro";
import "../styles/titled.css";
import "../styles/diagram.css";
import { prettyDate } from "../util.ts";

const blogPost = await db
  .select()
  .from(Blog)
  .where(eq(Blog.slug, Astro.props.slug ?? ""))
  .limit(1);

const { title, description, pubDate, updatedDate, heroImage } = blogPost[0];
const image = `/open-graph/blog/${Astro.props.slug}.png`;
---

<html lang="en">
  <head>
    <BaseHead title={title} image={image} description={description} />

    <style>
      .hero-image {
        width: 100%;
      }
      .title {
        font-size: 2.5rem;
        margin-top: 1em;
        line-height: 1em;
      }
      .titleBox {
        display: flex;
        flex-direction: column;
        align-items: center;
      }
      .hero-image img {
        display: block;
        margin: 0 auto;
        border-radius: 12px;
        box-shadow: var(--box-shadow);
      }
      .last-updated {
        font-style: italic;
      }
    </style>
  </head>

  <body>
    <Header />
    <main>
      <article>
        <div class="hero-image">
          {
            heroImage && (
              <img width={1020} height={510} src={heroImage} alt="" />
            )
          }
        </div>
        <div class="titleBox">
          <div>
            <div class="title">
              {title}
            </div>
            <div class="subTitle">
              {prettyDate(pubDate)}
              {updatedDate && (
                <div class="last-updated">
                  (updated {prettyDate(updatedDate)}) 
                </div>
              )}
            </div>
          </div>
        </div>
        <hr />
        <div class="prose">
          <slot />
        </div>
      </article>
    </main>
    <Footer />
  </body>
</html>
